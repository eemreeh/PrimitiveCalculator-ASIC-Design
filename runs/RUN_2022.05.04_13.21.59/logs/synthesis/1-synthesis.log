
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12+45 (git sha1 UNKNOWN, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v
Parsing SystemVerilog input from `/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v' to AST representation.
Generating RTLIL representation for module `\PrimitiveALU'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v
Parsing SystemVerilog input from `/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v' to AST representation.
Generating RTLIL representation for module `\PrimitiveCalculator'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v
Parsing SystemVerilog input from `/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v' to AST representation.
Generating RTLIL representation for module `\RotaryEncoder'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openlane/designs/PrimitiveCalculator/src/ClockDivider.v
Parsing SystemVerilog input from `/openlane/designs/PrimitiveCalculator/src/ClockDivider.v' to AST representation.
Generating RTLIL representation for module `\ClockDivider'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openlane/designs/PrimitiveCalculator/src/Debouncer.v
Parsing SystemVerilog input from `/openlane/designs/PrimitiveCalculator/src/Debouncer.v' to AST representation.
Generating RTLIL representation for module `\Debouncer'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v
Parsing SystemVerilog input from `/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v' to AST representation.
Generating RTLIL representation for module `\HexSevenSegmentDecoder'.
Successfully finished Verilog frontend.

7. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/PrimitiveCalculator/runs/RUN_2022.05.04_13.21.59/tmp/synthesis/hierarchy.dot'.
Dumping module PrimitiveCalculator to page 1.

8. Executing HIERARCHY pass (managing design hierarchy).

8.1. Analyzing design hierarchy..
Top module:  \PrimitiveCalculator
Used module:     \PrimitiveALU
Used module:     \HexSevenSegmentDecoder
Used module:     \RotaryEncoder
Used module:     \Debouncer
Used module:     \ClockDivider
Parameter \REG_LEN = 8
Parameter \ADD_SUB = 1'1

8.2. Executing AST frontend in derive mode using pre-parsed AST for module `\RotaryEncoder'.
Parameter \REG_LEN = 8
Parameter \ADD_SUB = 1'1
Generating RTLIL representation for module `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1'.
Parameter \REG_LEN = 8

8.3. Executing AST frontend in derive mode using pre-parsed AST for module `\Debouncer'.
Parameter \REG_LEN = 8
Generating RTLIL representation for module `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000'.
Parameter \REG_LEN = 8
Found cached RTLIL representation for module `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000'.
Parameter \REG_LEN = 8
Found cached RTLIL representation for module `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000'.
Parameter \REG_LEN = 8
Found cached RTLIL representation for module `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000'.
Parameter \REG_LEN = 1

8.4. Executing AST frontend in derive mode using pre-parsed AST for module `\ClockDivider'.
Parameter \REG_LEN = 1
Generating RTLIL representation for module `$paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001'.

8.5. Analyzing design hierarchy..
Top module:  \PrimitiveCalculator
Used module:     \PrimitiveALU
Used module:     \HexSevenSegmentDecoder
Used module:     $paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1
Used module:     $paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000
Used module:     $paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001

8.6. Analyzing design hierarchy..
Top module:  \PrimitiveCalculator
Used module:     \PrimitiveALU
Used module:     \HexSevenSegmentDecoder
Used module:     $paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1
Used module:     $paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000
Used module:     $paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001
Removing unused module `\Debouncer'.
Removing unused module `\ClockDivider'.
Removing unused module `\RotaryEncoder'.
Removed 3 unused modules.

9. Executing TRIBUF pass.

10. Executing SYNTH pass.

10.1. Executing HIERARCHY pass (managing design hierarchy).

10.1.1. Analyzing design hierarchy..
Top module:  \PrimitiveCalculator
Used module:     \PrimitiveALU
Used module:     \HexSevenSegmentDecoder
Used module:     $paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1
Used module:     $paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000
Used module:     $paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001

10.1.2. Analyzing design hierarchy..
Top module:  \PrimitiveCalculator
Used module:     \PrimitiveALU
Used module:     \HexSevenSegmentDecoder
Used module:     $paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1
Used module:     $paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000
Used module:     $paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001
Removed 0 unused modules.

10.2. Executing PROC pass (convert processes to netlists).

10.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:38$27 in module HexSevenSegmentDecoder.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:38$27 in module HexSevenSegmentDecoder.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:18$24 in module HexSevenSegmentDecoder.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/PrimitiveCalculator/src/ClockDivider.v:13$34 in module $paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/PrimitiveCalculator/src/Debouncer.v:18$31 in module $paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:17$28 in module $paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15 in module PrimitiveCalculator.
Marked 11 switch rules as full_case in process $proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:63$14 in module PrimitiveCalculator.
Removed 1 dead cases from process $proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:16$1 in module PrimitiveALU.
Marked 4 switch rules as full_case in process $proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:16$1 in module PrimitiveALU.
Removed a total of 2 dead cases.

10.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 12 assignments to connections.

10.2.4. Executing PROC_INIT pass (extract init attributes).

10.2.5. Executing PROC_ARST pass (detect async resets in processes).

10.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:38$27'.
     1/1: $1\display_out[6:0]
Creating decoders for process `\HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:18$24'.
     1/3: $0\digit[0:0]
     2/3: $0\units_r[3:0]
     3/3: $0\tens_r[3:0]
Creating decoders for process `$paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001.$proc$/openlane/designs/PrimitiveCalculator/src/ClockDivider.v:13$34'.
     1/1: $0\clk_div[0:0]
Creating decoders for process `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.$proc$/openlane/designs/PrimitiveCalculator/src/Debouncer.v:18$31'.
     1/2: $0\r_out[0:0]
     2/2: $0\shift_reg[7:0]
Creating decoders for process `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.$proc$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:17$28'.
     1/3: $0\b_d1[0:0]
     2/3: $0\a_d1[0:0]
     3/3: $0\out[7:0]
Creating decoders for process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15'.
     1/8: $1\seven_segment_tens[3:0]
     2/8: $1\alu_in_b_r[7:0]
     3/8: $1\alu_in_a_r[7:0]
     4/8: $1\alu_load[0:0]
     5/8: $1\led_flag[0:0]
     6/8: $1\seven_segment_units[3:0]
     7/8: $1\seven_segment_load[0:0]
     8/8: $1\alu_select[2:0]
Creating decoders for process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:63$14'.
     1/2: $0\next_state[2:0]
     2/2: $0\current_state[2:0]
Creating decoders for process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:33$11'.
Creating decoders for process `\PrimitiveALU.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:16$1'.
     1/7: $3\flag[0:0]
     2/7: $3\out[7:0]
     3/7: $4\flag[0:0]
     4/7: $2\flag[0:0]
     5/7: $2\out[7:0]
     6/7: $1\flag[0:0]
     7/7: $1\out[7:0]

10.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\HexSevenSegmentDecoder.\display_out' from process `\HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:38$27'.
Latch inferred for signal `\PrimitiveCalculator.\led_flag' from process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15': $auto$proc_dlatch.cc:427:proc_dlatch$265
Latch inferred for signal `\PrimitiveCalculator.\seven_segment_load' from process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15': $auto$proc_dlatch.cc:427:proc_dlatch$294
Latch inferred for signal `\PrimitiveCalculator.\seven_segment_tens' from process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15': $auto$proc_dlatch.cc:427:proc_dlatch$329
Latch inferred for signal `\PrimitiveCalculator.\seven_segment_units' from process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15': $auto$proc_dlatch.cc:427:proc_dlatch$364
Latch inferred for signal `\PrimitiveCalculator.\alu_load' from process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15': $auto$proc_dlatch.cc:427:proc_dlatch$381
Latch inferred for signal `\PrimitiveCalculator.\alu_in_a_r' from process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15': $auto$proc_dlatch.cc:427:proc_dlatch$398
Latch inferred for signal `\PrimitiveCalculator.\alu_in_b_r' from process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15': $auto$proc_dlatch.cc:427:proc_dlatch$415
Latch inferred for signal `\PrimitiveCalculator.\alu_select' from process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15': $auto$proc_dlatch.cc:427:proc_dlatch$426
Latch inferred for signal `\PrimitiveALU.\out' from process `\PrimitiveALU.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:16$1': $auto$proc_dlatch.cc:427:proc_dlatch$453
Latch inferred for signal `\PrimitiveALU.\flag' from process `\PrimitiveALU.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:16$1': $auto$proc_dlatch.cc:427:proc_dlatch$456

10.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\HexSevenSegmentDecoder.\digit' using process `\HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:18$24'.
  created $dff cell `$procdff$457' with positive edge clock.
Creating register for signal `\HexSevenSegmentDecoder.\tens_r' using process `\HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:18$24'.
  created $dff cell `$procdff$458' with positive edge clock.
Creating register for signal `\HexSevenSegmentDecoder.\units_r' using process `\HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:18$24'.
  created $dff cell `$procdff$459' with positive edge clock.
Creating register for signal `$paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001.\clk_div' using process `$paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001.$proc$/openlane/designs/PrimitiveCalculator/src/ClockDivider.v:13$34'.
  created $dff cell `$procdff$460' with positive edge clock.
Creating register for signal `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.\shift_reg' using process `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.$proc$/openlane/designs/PrimitiveCalculator/src/Debouncer.v:18$31'.
  created $dff cell `$procdff$461' with positive edge clock.
Creating register for signal `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.\r_out' using process `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.$proc$/openlane/designs/PrimitiveCalculator/src/Debouncer.v:18$31'.
  created $dff cell `$procdff$462' with positive edge clock.
Creating register for signal `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.\out' using process `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.$proc$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:17$28'.
  created $dff cell `$procdff$463' with positive edge clock.
Creating register for signal `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.\a_d1' using process `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.$proc$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:17$28'.
  created $dff cell `$procdff$464' with positive edge clock.
Creating register for signal `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.\b_d1' using process `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.$proc$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:17$28'.
  created $dff cell `$procdff$465' with positive edge clock.
Creating register for signal `\PrimitiveCalculator.\current_state' using process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:63$14'.
  created $dff cell `$procdff$466' with positive edge clock.
Creating register for signal `\PrimitiveCalculator.\next_state' using process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:63$14'.
  created $dff cell `$procdff$467' with positive edge clock.
Creating register for signal `\PrimitiveCalculator.\select_d1' using process `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:33$11'.
  created $dff cell `$procdff$468' with positive edge clock.

10.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

10.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:38$27'.
Removing empty process `HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:38$27'.
Found and cleaned up 2 empty switches in `\HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:18$24'.
Removing empty process `HexSevenSegmentDecoder.$proc$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:18$24'.
Found and cleaned up 1 empty switch in `$paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001.$proc$/openlane/designs/PrimitiveCalculator/src/ClockDivider.v:13$34'.
Removing empty process `$paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001.$proc$/openlane/designs/PrimitiveCalculator/src/ClockDivider.v:13$34'.
Found and cleaned up 3 empty switches in `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.$proc$/openlane/designs/PrimitiveCalculator/src/Debouncer.v:18$31'.
Removing empty process `$paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.$proc$/openlane/designs/PrimitiveCalculator/src/Debouncer.v:18$31'.
Found and cleaned up 2 empty switches in `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.$proc$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:17$28'.
Removing empty process `$paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.$proc$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:17$28'.
Found and cleaned up 1 empty switch in `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15'.
Removing empty process `PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:119$15'.
Found and cleaned up 12 empty switches in `\PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:63$14'.
Removing empty process `PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:63$14'.
Removing empty process `PrimitiveCalculator.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveCalculator.v:33$11'.
Found and cleaned up 4 empty switches in `\PrimitiveALU.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:16$1'.
Removing empty process `PrimitiveALU.$proc$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:16$1'.
Cleaned up 26 empty switches.

10.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module HexSevenSegmentDecoder.
<suppressed ~1 debug messages>
Optimizing module $paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001.
Optimizing module $paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.
<suppressed ~1 debug messages>
Optimizing module $paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.
Optimizing module PrimitiveCalculator.
<suppressed ~56 debug messages>
Optimizing module PrimitiveALU.
<suppressed ~22 debug messages>

10.3. Executing FLATTEN pass (flatten design).
Deleting now unused module HexSevenSegmentDecoder.
Deleting now unused module $paramod\ClockDivider\REG_LEN=s32'00000000000000000000000000000001.
Deleting now unused module $paramod\Debouncer\REG_LEN=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\RotaryEncoder\REG_LEN=s32'00000000000000000000000000001000\ADD_SUB=1'1.
Deleting now unused module PrimitiveALU.
<suppressed ~8 debug messages>

10.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 11 unused cells and 168 unused wires.
<suppressed ~12 debug messages>

10.6. Executing CHECK pass (checking for obvious problems).
Checking module PrimitiveCalculator...
Found and reported 0 problems.

10.7. Executing OPT pass (performing simple optimizations).

10.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

10.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

10.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
    New ctrl vector for $pmux cell $flatten\alu.$procmux$185: { $flatten\alu.$procmux$192_CMP $flatten\alu.$procmux$191_CMP $auto$opt_reduce.cc:134:opt_mux$470 }
    New ctrl vector for $pmux cell $flatten\alu.$procmux$200: { $flatten\alu.$procmux$192_CMP $flatten\alu.$procmux$191_CMP $flatten\alu.$procmux$190_CMP $flatten\alu.$procmux$189_CMP $flatten\alu.$procmux$188_CMP $flatten\alu.$procmux$187_CMP $flatten\alu.$procmux$186_CMP }
    New ctrl vector for $pmux cell $procmux$106: $procmux$100_CMP
    New ctrl vector for $pmux cell $procmux$113: $procmux$101_CMP
    New ctrl vector for $pmux cell $procmux$117: $procmux$118_CMP
    New ctrl vector for $pmux cell $procmux$121: $procmux$118_CMP
    New ctrl vector for $pmux cell $procmux$125: { $auto$opt_reduce.cc:134:opt_mux$472 $procmux$127_CMP $procmux$118_CMP }
    New ctrl vector for $pmux cell $procmux$133: $auto$opt_reduce.cc:134:opt_mux$474
    New ctrl vector for $pmux cell $procmux$97: { $auto$opt_reduce.cc:134:opt_mux$476 $procmux$118_CMP }
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 9 changes.

10.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

10.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$proc_dlatch.cc:427:proc_dlatch$426 ($dlatch) from module PrimitiveCalculator.

10.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 1 unused cells and 56 unused wires.
<suppressed ~2 debug messages>

10.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.
<suppressed ~5 debug messages>

10.7.9. Rerunning OPT passes. (Maybe there is more to do..)

10.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/8 on $pmux $flatten\alu.$procmux$200.
    dead port 2/8 on $pmux $flatten\alu.$procmux$200.
    dead port 3/8 on $pmux $flatten\alu.$procmux$200.
    dead port 4/8 on $pmux $flatten\alu.$procmux$200.
Removed 4 multiplexer ports.
<suppressed ~28 debug messages>

10.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 0 changes.

10.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.7.13. Executing OPT_DFF pass (perform DFF optimizations).

10.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 4 unused cells and 9 unused wires.
<suppressed ~5 debug messages>

10.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.7.16. Rerunning OPT passes. (Maybe there is more to do..)

10.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

10.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 0 changes.

10.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.7.20. Executing OPT_DFF pass (perform DFF optimizations).

10.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..

10.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.7.23. Finished OPT passes. (There is nothing left to do.)

10.8. Executing FSM pass (extract and optimize FSM).

10.8.1. Executing FSM_DETECT pass (finding FSMs in design).

10.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).

10.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).

10.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..

10.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).

10.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

10.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

10.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

10.9. Executing OPT pass (performing simple optimizations).

10.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

10.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 0 changes.

10.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$467 ($dff) from module PrimitiveCalculator (D = $0\next_state[2:0], Q = \next_state).
Adding EN signal on $procdff$466 ($dff) from module PrimitiveCalculator (D = \next_state, Q = \current_state).
Adding SRST signal on $flatten\seven_segment.$procdff$459 ($dff) from module PrimitiveCalculator (D = $flatten\seven_segment.$procmux$57_Y, Q = \seven_segment.units_r, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$482 ($sdff) from module PrimitiveCalculator (D = \seven_segment_units, Q = \seven_segment.units_r).
Adding SRST signal on $flatten\seven_segment.$procdff$458 ($dff) from module PrimitiveCalculator (D = $flatten\seven_segment.$procmux$63_Y, Q = \seven_segment.tens_r, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$484 ($sdff) from module PrimitiveCalculator (D = \seven_segment_tens, Q = \seven_segment.tens_r).
Adding SRST signal on $flatten\seven_segment.$procdff$457 ($dff) from module PrimitiveCalculator (D = $flatten\seven_segment.$not$/openlane/designs/PrimitiveCalculator/src/HexSevenSegmentDecoder.v:32$25_Y, Q = \seven_segment.digit, rval = 1'0).
Adding SRST signal on $flatten\rotary_encoder.$procdff$465 ($dff) from module PrimitiveCalculator (D = \debouncer_rotary_b.r_out, Q = \rotary_encoder.b_d1, rval = 1'0).
Adding SRST signal on $flatten\rotary_encoder.$procdff$464 ($dff) from module PrimitiveCalculator (D = \debouncer_rotary_a.r_out, Q = \rotary_encoder.a_d1, rval = 1'0).
Adding SRST signal on $flatten\rotary_encoder.$procdff$463 ($dff) from module PrimitiveCalculator (D = $flatten\rotary_encoder.$procmux$90_Y, Q = \rotary_encoder.out, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$489 ($sdff) from module PrimitiveCalculator (D = $flatten\rotary_encoder.$procmux$90_Y, Q = \rotary_encoder.out).
Adding SRST signal on $flatten\debouncer_rotary_select.$procdff$462 ($dff) from module PrimitiveCalculator (D = $flatten\debouncer_rotary_select.$procmux$75_Y, Q = \debouncer_rotary_select.r_out, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$493 ($sdff) from module PrimitiveCalculator (D = $flatten\debouncer_rotary_select.$procmux$75_Y, Q = \debouncer_rotary_select.r_out).
Adding SRST signal on $flatten\debouncer_rotary_select.$procdff$461 ($dff) from module PrimitiveCalculator (D = { \debouncer_rotary_select.shift_reg [6:0] \select }, Q = \debouncer_rotary_select.shift_reg, rval = 8'00000000).
Adding SRST signal on $flatten\debouncer_rotary_restart.$procdff$462 ($dff) from module PrimitiveCalculator (D = $flatten\debouncer_rotary_restart.$procmux$75_Y, Q = \debouncer_rotary_restart.r_out, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$498 ($sdff) from module PrimitiveCalculator (D = $flatten\debouncer_rotary_restart.$procmux$75_Y, Q = \debouncer_rotary_restart.r_out).
Adding SRST signal on $flatten\debouncer_rotary_restart.$procdff$461 ($dff) from module PrimitiveCalculator (D = { \debouncer_rotary_restart.shift_reg [6:0] \restart }, Q = \debouncer_rotary_restart.shift_reg, rval = 8'00000000).
Adding SRST signal on $flatten\debouncer_rotary_b.$procdff$462 ($dff) from module PrimitiveCalculator (D = $flatten\debouncer_rotary_b.$procmux$75_Y, Q = \debouncer_rotary_b.r_out, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$503 ($sdff) from module PrimitiveCalculator (D = $flatten\debouncer_rotary_b.$procmux$75_Y, Q = \debouncer_rotary_b.r_out).
Adding SRST signal on $flatten\debouncer_rotary_b.$procdff$461 ($dff) from module PrimitiveCalculator (D = { \debouncer_rotary_b.shift_reg [6:0] \rotary_b }, Q = \debouncer_rotary_b.shift_reg, rval = 8'00000000).
Adding SRST signal on $flatten\debouncer_rotary_a.$procdff$462 ($dff) from module PrimitiveCalculator (D = $flatten\debouncer_rotary_a.$procmux$75_Y, Q = \debouncer_rotary_a.r_out, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$508 ($sdff) from module PrimitiveCalculator (D = $flatten\debouncer_rotary_a.$procmux$75_Y, Q = \debouncer_rotary_a.r_out).
Adding SRST signal on $flatten\debouncer_rotary_a.$procdff$461 ($dff) from module PrimitiveCalculator (D = { \debouncer_rotary_a.shift_reg [6:0] \rotary_a }, Q = \debouncer_rotary_a.shift_reg, rval = 8'00000000).
Adding SRST signal on $flatten\clok_divider.$procdff$460 ($dff) from module PrimitiveCalculator (D = $flatten\clok_divider.$add$/openlane/designs/PrimitiveCalculator/src/ClockDivider.v:15$35_Y, Q = \clok_divider.clk_div, rval = 1'0).

10.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 18 unused cells and 18 unused wires.
<suppressed ~19 debug messages>

10.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.
<suppressed ~6 debug messages>

10.9.9. Rerunning OPT passes. (Maybe there is more to do..)

10.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

10.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 0 changes.

10.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.9.13. Executing OPT_DFF pass (perform DFF optimizations).

10.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..

10.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.9.16. Finished OPT passes. (There is nothing left to do.)

10.10. Executing WREDUCE pass (reducing word size of cells).
Removed cell PrimitiveCalculator.$flatten\debouncer_rotary_b.$procmux$72 ($mux).
Removed top 1 bits (of 3) from port B of cell PrimitiveCalculator.$procmux$100_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell PrimitiveCalculator.$procmux$101_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell PrimitiveCalculator.$procmux$127_CMP0 ($eq).
Removed cell PrimitiveCalculator.$procmux$143 ($mux).
Removed cell PrimitiveCalculator.$flatten\debouncer_rotary_a.$procmux$72 ($mux).
Removed cell PrimitiveCalculator.$flatten\debouncer_rotary_select.$procmux$72 ($mux).
Removed cell PrimitiveCalculator.$flatten\debouncer_rotary_restart.$procmux$72 ($mux).
Removed top 1 bits (of 4) from port B of cell PrimitiveCalculator.$flatten\rotary_encoder.$procmux$92_CMP1 ($eq).
Removed top 2 bits (of 4) from port B of cell PrimitiveCalculator.$flatten\rotary_encoder.$procmux$91_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell PrimitiveCalculator.$flatten\seven_segment.$procmux$51_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell PrimitiveCalculator.$flatten\seven_segment.$procmux$50_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell PrimitiveCalculator.$flatten\seven_segment.$procmux$49_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PrimitiveCalculator.$flatten\seven_segment.$procmux$48_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PrimitiveCalculator.$flatten\seven_segment.$procmux$47_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PrimitiveCalculator.$flatten\seven_segment.$procmux$46_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PrimitiveCalculator.$flatten\seven_segment.$procmux$45_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell PrimitiveCalculator.$flatten\alu.$procmux$192_CMP0 ($eq).
Removed top 1 bits (of 3) from wire PrimitiveCalculator.alu_select.

10.11. Executing PEEPOPT pass (run peephole optimizers).

10.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

10.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module PrimitiveCalculator:
  creating $macc model for $flatten\alu.$add$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:23$2 ($add).
  creating $macc model for $flatten\alu.$mul$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:29$5 ($mul).
  creating $macc model for $flatten\alu.$sub$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:25$3 ($sub).
  creating $macc model for $flatten\clok_divider.$add$/openlane/designs/PrimitiveCalculator/src/ClockDivider.v:15$35 ($add).
  creating $macc model for $flatten\rotary_encoder.$add$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:28$29 ($add).
  creating $macc model for $flatten\rotary_encoder.$sub$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:31$30 ($sub).
  creating $alu model for $macc $flatten\rotary_encoder.$sub$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:31$30.
  creating $alu model for $macc $flatten\rotary_encoder.$add$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:28$29.
  creating $alu model for $macc $flatten\clok_divider.$add$/openlane/designs/PrimitiveCalculator/src/ClockDivider.v:15$35.
  creating $alu model for $macc $flatten\alu.$sub$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:25$3.
  creating $alu model for $macc $flatten\alu.$add$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:23$2.
  creating $macc cell for $flatten\alu.$mul$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:29$5: $auto$alumacc.cc:365:replace_macc$515
  creating $alu model for $flatten\alu.$gt$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:26$4 ($gt): new $alu
  creating $alu cell for $flatten\alu.$gt$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:26$4: $auto$alumacc.cc:485:replace_alu$517
  creating $alu cell for $flatten\alu.$add$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:23$2: $auto$alumacc.cc:485:replace_alu$528
  creating $alu cell for $flatten\alu.$sub$/openlane/designs/PrimitiveCalculator/src/PrimitiveALU.v:25$3: $auto$alumacc.cc:485:replace_alu$531
  creating $alu cell for $flatten\clok_divider.$add$/openlane/designs/PrimitiveCalculator/src/ClockDivider.v:15$35: $auto$alumacc.cc:485:replace_alu$534
  creating $alu cell for $flatten\rotary_encoder.$add$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:28$29: $auto$alumacc.cc:485:replace_alu$537
  creating $alu cell for $flatten\rotary_encoder.$sub$/openlane/designs/PrimitiveCalculator/src/RotaryEncoder.v:31$30: $auto$alumacc.cc:485:replace_alu$540
  created 6 $alu and 1 $macc cells.

10.14. Executing SHARE pass (SAT-based resource sharing).

10.15. Executing OPT pass (performing simple optimizations).

10.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.
<suppressed ~1 debug messages>

10.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

10.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 0 changes.

10.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.15.6. Executing OPT_DFF pass (perform DFF optimizations).

10.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

10.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.15.9. Rerunning OPT passes. (Maybe there is more to do..)

10.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

10.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 0 changes.

10.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.15.13. Executing OPT_DFF pass (perform DFF optimizations).

10.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..

10.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.15.16. Finished OPT passes. (There is nothing left to do.)

10.16. Executing MEMORY pass.

10.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

10.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

10.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

10.16.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

10.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..

10.16.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

10.16.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

10.16.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..

10.16.9. Executing MEMORY_COLLECT pass (generating $mem cells).

10.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..

10.18. Executing OPT pass (performing simple optimizations).

10.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.
<suppressed ~10 debug messages>

10.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.18.3. Executing OPT_DFF pass (perform DFF optimizations).

10.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 1 unused cells and 7 unused wires.
<suppressed ~2 debug messages>

10.18.5. Finished fast OPT passes.

10.19. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

10.20. Executing OPT pass (performing simple optimizations).

10.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

10.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 0 changes.

10.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\rotary_encoder.$procmux$90 in front of them:
        $auto$alumacc.cc:485:replace_alu$540
        $auto$alumacc.cc:485:replace_alu$537

10.20.7. Executing OPT_DFF pass (perform DFF optimizations).

10.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

10.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.
<suppressed ~2 debug messages>

10.20.10. Rerunning OPT passes. (Maybe there is more to do..)

10.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

10.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:241:merge_operators$546:
      Old ports: A=8'11111111, B=8'00000001, Y=$auto$rtlil.cc:2443:Mux$547
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2443:Mux$547 [1]
      New connections: { $auto$rtlil.cc:2443:Mux$547 [7:2] $auto$rtlil.cc:2443:Mux$547 [0] } = { $auto$rtlil.cc:2443:Mux$547 [1] $auto$rtlil.cc:2443:Mux$547 [1] $auto$rtlil.cc:2443:Mux$547 [1] $auto$rtlil.cc:2443:Mux$547 [1] $auto$rtlil.cc:2443:Mux$547 [1] $auto$rtlil.cc:2443:Mux$547 [1] 1'1 }
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 1 changes.

10.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.20.14. Executing OPT_SHARE pass.

10.20.15. Executing OPT_DFF pass (perform DFF optimizations).

10.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

10.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.
<suppressed ~1 debug messages>

10.20.18. Rerunning OPT passes. (Maybe there is more to do..)

10.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

10.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 0 changes.

10.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

10.20.22. Executing OPT_SHARE pass.

10.20.23. Executing OPT_DFF pass (perform DFF optimizations).

10.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..

10.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

10.20.26. Finished OPT passes. (There is nothing left to do.)

10.21. Executing TECHMAP pass (map to technology primitives).

10.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $or.
Using template $paramod$56f7ce6d87f8add68ca646dc02d7695a3189f8e5\_90_pmux for cells of type $pmux.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper maccmap for cells of type $macc.
  add \alu_in_a_r * \alu_in_b_r (8x8 bits, unsigned)
Using template $paramod$bf9a6aad4c9603c218b6b0be41de41e6ed43614c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_div for cells of type $div.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001001 for cells of type $fa.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\$__div_mod_trunc for cells of type $__div_mod_trunc.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$neg:Y_WIDTH=8:A_WIDTH=8:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:Y_WIDTH=8:A_WIDTH=8:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:Y_WIDTH=8:A_WIDTH=8:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\$__div_mod_u\WIDTH=32'00000000000000000000000000001000 for cells of type $__div_mod_u.
Using template $paramod$fd7bfb1a4f3a7c2ac1a35670d0fa64ccc7b91841\_90_alu for cells of type $alu.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=8:B_WIDTH=8:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=8:B_WIDTH=8:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=8:B_WIDTH=8:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=8:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=8:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=8:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=9:B_WIDTH=9:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=9:B_WIDTH=9:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=9:B_WIDTH=9:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=9:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=9:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=9:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=10:B_WIDTH=10:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=10:B_WIDTH=10:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=10:B_WIDTH=10:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=10:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=10:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=10:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=11:B_WIDTH=11:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=11:B_WIDTH=11:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=11:B_WIDTH=11:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=11:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=11:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=11:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=12:B_WIDTH=12:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=12:B_WIDTH=12:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=12:B_WIDTH=12:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=12:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=12:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=12:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=13:B_WIDTH=13:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=13:B_WIDTH=13:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=13:B_WIDTH=13:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=13:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=13:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=13:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=14:B_WIDTH=14:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=14:B_WIDTH=14:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=14:B_WIDTH=14:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=14:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=14:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=14:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=15:B_WIDTH=15:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=15:B_WIDTH=15:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=15:B_WIDTH=15:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=15:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=15:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=15:A_WIDTH=8:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using template $paramod$78648aff6d035ceca1e51be5292d8e9748cdc2be\_90_alu for cells of type $alu.
Using template $paramod$5ece6c5f43fb71f6d288804e401c83703363913e\_90_alu for cells of type $alu.
Using template $paramod$faa58573f9d1592ccf4bfc12206a71a8d2733e33\_90_alu for cells of type $alu.
Using template $paramod$7fb440a4f56077cf55596eac05c516869c752d23\_90_alu for cells of type $alu.
Using template $paramod$33acca59acb78d0be1d2963f30b104550f2b2c75\_90_alu for cells of type $alu.
Using template $paramod$f7417944f96f261f97a49c7e5ba603b32499b5a9\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001111 for cells of type $lcu.
No more expansions possible.
<suppressed ~3157 debug messages>

10.22. Executing OPT pass (performing simple optimizations).

10.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.
<suppressed ~1644 debug messages>

10.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
<suppressed ~2364 debug messages>
Removed a total of 788 cells.

10.22.3. Executing OPT_DFF pass (perform DFF optimizations).

10.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 237 unused cells and 1815 unused wires.
<suppressed ~238 debug messages>

10.22.5. Finished fast OPT passes.

10.23. Executing ABC pass (technology mapping using ABC).

10.23.1. Extracting gate netlist of module `\PrimitiveCalculator' to `<abc-temp-dir>/input.blif'..
Extracted 1184 gates and 1275 wires to a netlist network with 89 inputs and 73 outputs.

10.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       77
ABC RESULTS:            ANDNOT cells:      400
ABC RESULTS:               MUX cells:       47
ABC RESULTS:              NAND cells:       41
ABC RESULTS:               NOR cells:       58
ABC RESULTS:               NOT cells:       52
ABC RESULTS:                OR cells:      195
ABC RESULTS:             ORNOT cells:       35
ABC RESULTS:              XNOR cells:       35
ABC RESULTS:               XOR cells:      137
ABC RESULTS:        internal signals:     1113
ABC RESULTS:           input signals:       89
ABC RESULTS:          output signals:       73
Removing temp directory.

10.24. Executing OPT pass (performing simple optimizations).

10.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.
<suppressed ~2 debug messages>

10.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

10.24.3. Executing OPT_DFF pass (perform DFF optimizations).

10.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 1 unused cells and 652 unused wires.
<suppressed ~4 debug messages>

10.24.5. Finished fast OPT passes.

10.25. Executing HIERARCHY pass (managing design hierarchy).

10.25.1. Analyzing design hierarchy..
Top module:  \PrimitiveCalculator

10.25.2. Analyzing design hierarchy..
Top module:  \PrimitiveCalculator
Removed 0 unused modules.

10.26. Printing statistics.

=== PrimitiveCalculator ===

   Number of wires:               1116
   Number of wire bits:           1268
   Number of public wires:          78
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1175
     $_ANDNOT_                     400
     $_AND_                         77
     $_DFFE_PN_                      3
     $_DFFE_PP_                      3
     $_DFF_P_                        1
     $_DLATCH_N_                    36
     $_DLATCH_P_                     2
     $_MUX_                         47
     $_NAND_                        41
     $_NOR_                         57
     $_NOT_                         51
     $_ORNOT_                       35
     $_OR_                         194
     $_SDFFE_PP0P_                  20
     $_SDFF_PP0_                    36
     $_XNOR_                        35
     $_XOR_                        137

10.27. Executing CHECK pass (checking for obvious problems).
Checking module PrimitiveCalculator...
Found and reported 0 problems.

11. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/PrimitiveCalculator/runs/RUN_2022.05.04_13.21.59/tmp/synthesis/post_techmap.dot'.
Dumping module PrimitiveCalculator to page 1.

12. Executing SHARE pass (SAT-based resource sharing).

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PrimitiveCalculator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PrimitiveCalculator.
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PrimitiveCalculator'.
Removed a total of 0 cells.

13.6. Executing OPT_DFF pass (perform DFF optimizations).

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PrimitiveCalculator.

13.9. Finished OPT passes. (There is nothing left to do.)

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 0 unused cells and 43 unused wires.
<suppressed ~43 debug messages>

15. Printing statistics.

=== PrimitiveCalculator ===

   Number of wires:               1073
   Number of wire bits:           1184
   Number of public wires:          35
   Number of public wire bits:     115
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1175
     $_ANDNOT_                     400
     $_AND_                         77
     $_DFFE_PN_                      3
     $_DFFE_PP_                      3
     $_DFF_P_                        1
     $_DLATCH_N_                    36
     $_DLATCH_P_                     2
     $_MUX_                         47
     $_NAND_                        41
     $_NOR_                         57
     $_NOT_                         51
     $_ORNOT_                       35
     $_OR_                         194
     $_SDFFE_PP0P_                  20
     $_SDFF_PP0_                    36
     $_XNOR_                        35
     $_XOR_                        137

mapping tbuf

16. Executing TECHMAP pass (map to technology primitives).

16.1. Executing Verilog-2005 frontend: /home/emre/ASIC/pdk/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/emre/ASIC/pdk/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

16.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

17. Executing SIMPLEMAP pass (map simple cells to gate primitives).

18. Executing TECHMAP pass (map to technology primitives).

18.1. Executing Verilog-2005 frontend: /home/emre/ASIC/pdk/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/emre/ASIC/pdk/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

18.2. Continuing TECHMAP pass.
Using template \$_DLATCH_N_ for cells of type $_DLATCH_N_.
Using template \$_DLATCH_P_ for cells of type $_DLATCH_P_.
No more expansions possible.
<suppressed ~42 debug messages>

19. Executing SIMPLEMAP pass (map simple cells to gate primitives).

20. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

20.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\PrimitiveCalculator':
  mapped 63 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

21. Printing statistics.

=== PrimitiveCalculator ===

   Number of wires:               1269
   Number of wire bits:           1380
   Number of public wires:          35
   Number of public wire bits:     115
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1257
     $_ANDNOT_                     400
     $_AND_                         77
     $_MUX_                        129
     $_NAND_                        41
     $_NOR_                         57
     $_NOT_                         51
     $_ORNOT_                       35
     $_OR_                         194
     $_XNOR_                        35
     $_XOR_                        137
     sky130_fd_sc_hd__dfxtp_2       63
     sky130_fd_sc_hd__dlxtn_1       36
     sky130_fd_sc_hd__dlxtp_1        2

[INFO]: ABC: WireLoad : S_4

22. Executing ABC pass (technology mapping using ABC).

22.1. Extracting gate netlist of module `\PrimitiveCalculator' to `/tmp/yosys-abc-qWtmLh/input.blif'..
Extracted 1156 gates and 1262 wires to a netlist network with 105 inputs and 112 outputs.

22.1.1. Executing ABC.
Running ABC command: /build/bin/yosys-abc -s -f /tmp/yosys-abc-qWtmLh/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-qWtmLh/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-qWtmLh/input.blif 
ABC: + read_lib -w /openlane/designs/PrimitiveCalculator/runs/RUN_2022.05.04_13.21.59/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.07 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/PrimitiveCalculator/runs/RUN_2022.05.04_13.21.59/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.11 sec
ABC: Memory =    7.77 MB. Time =     0.11 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/PrimitiveCalculator/runs/RUN_2022.05.04_13.21.59/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/PrimitiveCalculator/runs/RUN_2022.05.04_13.21.59/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: Abc_NtkFastExtract: Nodes have duplicated fanins. FX is not performed.
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 10000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 5 -S 750.0 
ABC: + upsize -D 10000.0 
ABC: + dnsize -D 10000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    882 ( 24.7 %)   Cap = 10.1 ff (  6.0 %)   Area =     6859.08 ( 74.8 %)   Delay =  9902.86 ps  (  7.0 %)               
ABC: Path  0 --      84 : 0    5 pi                        A =   0.00  Df =  51.7  -28.9 ps  S =  77.6 ps  Cin =  0.0 ff  Cout =  15.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     248 : 3    4 sky130_fd_sc_hd__or3_2    A =   7.51  Df = 530.3 -329.9 ps  S = 105.5 ps  Cin =  1.5 ff  Cout =  12.2 ff  Cmax = 310.4 ff  G =  748  
ABC: Path  2 --     250 : 4    2 sky130_fd_sc_hd__or4b_4   A =  13.76  Df =1065.8 -732.4 ps  S =  88.6 ps  Cin =  2.2 ff  Cout =   7.2 ff  Cmax = 533.8 ff  G =  309  
ABC: Path  3 --     252 : 4    4 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =1410.9 -792.7 ps  S =  69.1 ps  Cin =  2.4 ff  Cout =  11.1 ff  Cmax = 325.0 ff  G =  449  
ABC: Path  4 --     266 : 5    3 sky130_fd_sc_hd__a311o_2  A =  11.26  Df =1811.0-1010.4 ps  S =  64.0 ps  Cin =  2.3 ff  Cout =   6.5 ff  Cmax = 298.5 ff  G =  271  
ABC: Path  5 --     271 : 4    3 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =2074.6-1100.5 ps  S =  68.4 ps  Cin =  2.4 ff  Cout =   8.6 ff  Cmax = 271.9 ff  G =  348  
ABC: Path  6 --     272 : 3    2 sky130_fd_sc_hd__and3_2   A =   7.51  Df =2286.1-1129.0 ps  S =  53.3 ps  Cin =  1.5 ff  Cout =   4.8 ff  Cmax = 309.5 ff  G =  314  
ABC: Path  7 --     273 : 3    2 sky130_fd_sc_hd__mux2_2   A =  11.26  Df =2613.4 -604.6 ps  S =  54.3 ps  Cin =  2.3 ff  Cout =   4.7 ff  Cmax = 297.6 ff  G =  197  
ABC: Path  8 --     274 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =2751.5 -565.4 ps  S = 182.7 ps  Cin =  2.1 ff  Cout =  14.8 ff  Cmax = 130.0 ff  G =  666  
ABC: Path  9 --     275 : 2    2 sky130_fd_sc_hd__or2_2    A =   6.26  Df =3050.4 -709.6 ps  S =  66.8 ps  Cin =  1.5 ff  Cout =   6.9 ff  Cmax = 299.4 ff  G =  457  
ABC: Path 10 --     285 : 5    5 sky130_fd_sc_hd__a311o_2  A =  11.26  Df =3462.3 -750.7 ps  S = 105.6 ps  Cin =  2.3 ff  Cout =  16.6 ff  Cmax = 298.5 ff  G =  691  
ABC: Path 11 --     311 : 4    3 sky130_fd_sc_hd__or4_4    A =  11.26  Df =3988.2-1138.1 ps  S =  87.6 ps  Cin =  2.4 ff  Cout =   6.4 ff  Cmax = 534.7 ff  G =  257  
ABC: Path 12 --     316 : 4    3 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =4258.3 -549.8 ps  S =  84.7 ps  Cin =  2.4 ff  Cout =  11.8 ff  Cmax = 271.9 ff  G =  474  
ABC: Path 13 --     325 : 5    2 sky130_fd_sc_hd__a311o_2  A =  11.26  Df =4654.3 -722.9 ps  S =  64.6 ps  Cin =  2.3 ff  Cout =   6.6 ff  Cmax = 298.5 ff  G =  277  
ABC: Path 14 --     329 : 3    3 sky130_fd_sc_hd__a21oi_2  A =   8.76  Df =4856.9 -853.2 ps  S = 180.3 ps  Cin =  4.6 ff  Cout =  12.2 ff  Cmax = 128.2 ff  G =  254  
ABC: Path 15 --     331 : 2    5 sky130_fd_sc_hd__nor2_2   A =   6.26  Df =4947.5 -755.1 ps  S = 187.1 ps  Cin =  4.4 ff  Cout =  15.0 ff  Cmax = 141.9 ff  G =  325  
ABC: Path 16 --     344 : 3    3 sky130_fd_sc_hd__mux2_2   A =  11.26  Df =5304.7 -804.3 ps  S =  76.1 ps  Cin =  2.3 ff  Cout =  10.6 ff  Cmax = 297.6 ff  G =  450  
ABC: Path 17 --     367 : 2    3 sky130_fd_sc_hd__or2_2    A =   6.26  Df =5615.5 -977.7 ps  S =  78.1 ps  Cin =  1.5 ff  Cout =  11.1 ff  Cmax = 299.4 ff  G =  738  
ABC: Path 18 --     370 : 4    4 sky130_fd_sc_hd__o211ai_2 A =  12.51  Df =5734.3  -58.5 ps  S = 231.2 ps  Cin =  4.4 ff  Cout =  14.2 ff  Cmax = 133.7 ff  G =  308  
ABC: Path 19 --     374 : 5    4 sky130_fd_sc_hd__a311oi_2 A =  15.01  Df =6003.1 -125.5 ps  S = 250.9 ps  Cin =  4.3 ff  Cout =   7.0 ff  Cmax =  84.2 ff  G =  153  
ABC: Path 20 --     386 : 4    3 sky130_fd_sc_hd__or4_2    A =   8.76  Df =6602.7 -394.4 ps  S = 133.2 ps  Cin =  1.5 ff  Cout =  11.3 ff  Cmax = 310.4 ff  G =  718  
ABC: Path 21 --     390 : 3    3 sky130_fd_sc_hd__and3_2   A =   7.51  Df =6872.5 -384.2 ps  S =  85.8 ps  Cin =  1.5 ff  Cout =  12.0 ff  Cmax = 309.5 ff  G =  759  
ABC: Path 22 --     444 : 4    1 sky130_fd_sc_hd__or4_4    A =  11.26  Df =7337.1 -316.0 ps  S =  77.4 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 534.7 ff  G =   96  
ABC: Path 23 --     446 : 5    3 sky130_fd_sc_hd__o41a_2   A =  12.51  Df =7743.8 -589.2 ps  S =  83.0 ps  Cin =  2.4 ff  Cout =  10.1 ff  Cmax = 305.8 ff  G =  405  
ABC: Path 24 --     462 : 5    2 sky130_fd_sc_hd__a221o_2  A =  11.26  Df =8143.1 -835.3 ps  S =  59.7 ps  Cin =  2.3 ff  Cout =   4.9 ff  Cmax = 299.4 ff  G =  204  
ABC: Path 25 --     468 : 4    2 sky130_fd_sc_hd__o211a_2  A =  10.01  Df =8279.6 -105.1 ps  S =  49.6 ps  Cin =  2.4 ff  Cout =   3.9 ff  Cmax = 268.3 ff  G =  157  
ABC: Path 26 --     481 : 5    1 sky130_fd_sc_hd__a2111o_2 A =  12.51  Df =8703.0 -323.4 ps  S =  58.5 ps  Cin =  2.4 ff  Cout =   2.4 ff  Cmax = 324.1 ff  G =   95  
ABC: Path 27 --     482 : 5    1 sky130_fd_sc_hd__a32o_2   A =  11.26  Df =8960.6 -371.1 ps  S =  43.6 ps  Cin =  2.3 ff  Cout =   2.5 ff  Cmax = 264.6 ff  G =  101  
ABC: Path 28 --     497 : 4    1 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =9274.4 -563.7 ps  S =  45.1 ps  Cin =  2.4 ff  Cout =   2.4 ff  Cmax = 325.0 ff  G =   98  
ABC: Path 29 --     504 : 5    1 sky130_fd_sc_hd__a221o_2  A =  11.26  Df =9643.2 -778.6 ps  S =  70.2 ps  Cin =  2.3 ff  Cout =   8.9 ff  Cmax = 299.4 ff  G =  368  
ABC: Path 30 --     509 : 3    1 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =9902.9 -946.4 ps  S = 275.4 ps  Cin =  8.8 ff  Cout =  33.4 ff  Cmax = 221.6 ff  G =  379  
ABC: Start-point = pi83 (\alu.in_b [6]).  End-point = po4 ($abc$5909$flatten\alu.$0\out[7:0][0]).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  105/  112  lat =    0  nd =   882  edge =   2098  area =6859.68  delay =31.00  lev = 31
ABC: + write_blif /tmp/yosys-abc-qWtmLh/output.blif 

22.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__a21oi_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:       80
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:       41
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      187
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       31
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:       26
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       70
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       58
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:       30
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o41a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__or4_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4b_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:       36
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:       17
ABC RESULTS:        internal signals:     1045
ABC RESULTS:           input signals:      105
ABC RESULTS:          output signals:      112
Removing temp directory.

23. Executing SETUNDEF pass (replace undef values with defined constants).

24. Executing HILOMAP pass (mapping to constant drivers).

25. Executing SPLITNETS pass (splitting up multi-bit signals).

26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PrimitiveCalculator..
Removed 1 unused cells and 1379 unused wires.
<suppressed ~3 debug messages>

27. Executing INSBUF pass (insert buffer cells for connected wires).

28. Executing CHECK pass (checking for obvious problems).
Checking module PrimitiveCalculator...
Warning: Wire PrimitiveCalculator.\seven_segment_out [6] is used but has no driver.
Warning: Wire PrimitiveCalculator.\seven_segment_out [5] is used but has no driver.
Warning: Wire PrimitiveCalculator.\seven_segment_out [4] is used but has no driver.
Warning: Wire PrimitiveCalculator.\seven_segment_out [3] is used but has no driver.
Warning: Wire PrimitiveCalculator.\seven_segment_out [2] is used but has no driver.
Warning: Wire PrimitiveCalculator.\seven_segment_out [1] is used but has no driver.
Warning: Wire PrimitiveCalculator.\seven_segment_out [0] is used but has no driver.
Warning: Wire PrimitiveCalculator.\seven_segment_digit is used but has no driver.
Warning: Wire PrimitiveCalculator.\led_flag is used but has no driver.
Found and reported 9 problems.

29. Printing statistics.

=== PrimitiveCalculator ===

   Number of wires:                983
   Number of wire bits:            989
   Number of public wires:         108
   Number of public wire bits:     114
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                983
     sky130_fd_sc_hd__a2111o_2       2
     sky130_fd_sc_hd__a211o_2       13
     sky130_fd_sc_hd__a211oi_2       3
     sky130_fd_sc_hd__a21bo_2        8
     sky130_fd_sc_hd__a21o_2        27
     sky130_fd_sc_hd__a21oi_2       27
     sky130_fd_sc_hd__a21oi_4        1
     sky130_fd_sc_hd__a221o_2        4
     sky130_fd_sc_hd__a221oi_2       2
     sky130_fd_sc_hd__a22o_2        20
     sky130_fd_sc_hd__a311o_2        5
     sky130_fd_sc_hd__a311oi_2       2
     sky130_fd_sc_hd__a31o_2        19
     sky130_fd_sc_hd__a31oi_2        2
     sky130_fd_sc_hd__a32o_2         7
     sky130_fd_sc_hd__a41o_2         2
     sky130_fd_sc_hd__and2_2        80
     sky130_fd_sc_hd__and2b_2        7
     sky130_fd_sc_hd__and3_2        41
     sky130_fd_sc_hd__and3b_2        5
     sky130_fd_sc_hd__and4_2         8
     sky130_fd_sc_hd__and4b_2        3
     sky130_fd_sc_hd__and4bb_2       1
     sky130_fd_sc_hd__buf_1        187
     sky130_fd_sc_hd__dfxtp_2       63
     sky130_fd_sc_hd__dlxtn_1       36
     sky130_fd_sc_hd__dlxtp_1        2
     sky130_fd_sc_hd__inv_2         31
     sky130_fd_sc_hd__mux2_2        26
     sky130_fd_sc_hd__nand2_2       70
     sky130_fd_sc_hd__nand3_2        3
     sky130_fd_sc_hd__nand3b_2       1
     sky130_fd_sc_hd__nand4_2        1
     sky130_fd_sc_hd__nor2_2        58
     sky130_fd_sc_hd__nor3_2         3
     sky130_fd_sc_hd__nor3b_2        1
     sky130_fd_sc_hd__o2111a_2       1
     sky130_fd_sc_hd__o211a_2       12
     sky130_fd_sc_hd__o211ai_2       2
     sky130_fd_sc_hd__o21a_2        14
     sky130_fd_sc_hd__o21ai_2       30
     sky130_fd_sc_hd__o21ba_2        2
     sky130_fd_sc_hd__o21bai_2       1
     sky130_fd_sc_hd__o221a_2        3
     sky130_fd_sc_hd__o221ai_2       1
     sky130_fd_sc_hd__o22a_2         5
     sky130_fd_sc_hd__o22ai_2        2
     sky130_fd_sc_hd__o2bb2a_2       4
     sky130_fd_sc_hd__o311a_2        8
     sky130_fd_sc_hd__o31a_2         3
     sky130_fd_sc_hd__o31ai_2        2
     sky130_fd_sc_hd__o41a_2         1
     sky130_fd_sc_hd__or2_2         25
     sky130_fd_sc_hd__or2b_2        11
     sky130_fd_sc_hd__or3_2         15
     sky130_fd_sc_hd__or3b_2         1
     sky130_fd_sc_hd__or4_2         12
     sky130_fd_sc_hd__or4_4          2
     sky130_fd_sc_hd__or4b_2         1
     sky130_fd_sc_hd__or4b_4         1
     sky130_fd_sc_hd__xnor2_2       36
     sky130_fd_sc_hd__xor2_2        17

   Chip area for module '\PrimitiveCalculator': 8769.660800

30. Executing Verilog backend.
Dumping module `\PrimitiveCalculator'.

Warnings: 9 unique messages, 9 total
End of script. Logfile hash: b3cef97b5d, CPU: user 3.05s system 0.06s, MEM: 47.37 MB peak
Yosys 0.12+45 (git sha1 UNKNOWN, gcc 8.3.1 -fPIC -Os)
Time spent: 41% 2x abc (2 sec), 11% 39x opt_expr (0 sec), ...
